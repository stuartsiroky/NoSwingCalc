public abstract class calc.model.AbstractModel extends java.lang.Object implements calc.model.Model
{
    private java.util.ArrayList listeners;

    public void notifyChanged(calc.model.ModelEvent)
    {
        calc.model.AbstractModel this;
        calc.model.ModelEvent event;
        java.util.ArrayList list, temp$0;
        java.lang.Object temp$1, temp$4;
        java.util.Iterator it, temp$2;
        boolean temp$3;
        calc.model.ModelListener ml;

        this := @this: calc.model.AbstractModel;
        event := @parameter0: calc.model.ModelEvent;
        temp$0 = this.<calc.model.AbstractModel: java.util.ArrayList listeners>;
        temp$1 = virtualinvoke temp$0.<java.util.ArrayList: java.lang.Object clone()>();
        list = (java.util.ArrayList) temp$1;
        temp$2 = virtualinvoke list.<java.util.ArrayList: java.util.Iterator iterator()>();
        it = temp$2;

     label0:
        nop;
        temp$3 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if temp$3 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$4 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        ml = (calc.model.ModelListener) temp$4;
        interfaceinvoke ml.<calc.model.ModelListener: void modelChanged(calc.model.ModelEvent)>(event);
        goto label0;

     label2:
        nop;
        return;
    }

    public void addModelListener(calc.model.ModelListener)
    {
        calc.model.AbstractModel this;
        calc.model.ModelListener l;
        java.util.ArrayList temp$0;
        boolean temp$1;

        this := @this: calc.model.AbstractModel;
        l := @parameter0: calc.model.ModelListener;
        temp$0 = this.<calc.model.AbstractModel: java.util.ArrayList listeners>;
        temp$1 = virtualinvoke temp$0.<java.util.ArrayList: boolean add(java.lang.Object)>(l);
        return;
    }

    public void removeModelListener(calc.model.ModelListener)
    {
        calc.model.AbstractModel this;
        calc.model.ModelListener l;
        java.util.ArrayList temp$0;
        boolean temp$1;

        this := @this: calc.model.AbstractModel;
        l := @parameter0: calc.model.ModelListener;
        temp$0 = this.<calc.model.AbstractModel: java.util.ArrayList listeners>;
        temp$1 = virtualinvoke temp$0.<java.util.ArrayList: boolean remove(java.lang.Object)>(l);
        return;
    }

    public void <init>()
    {
        calc.model.AbstractModel this;
        java.util.ArrayList temp$0;

        this := @this: calc.model.AbstractModel;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = new java.util.ArrayList;
        specialinvoke temp$0.<java.util.ArrayList: void <init>(int)>(5);
        this.<calc.model.AbstractModel: java.util.ArrayList listeners> = temp$0;
        return;
    }
}
