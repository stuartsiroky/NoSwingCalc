public abstract class calc.view.JFrameView extends calc.noSwing.MyJFrame implements calc.view.View, calc.model.ModelListener
{
    private calc.model.Model model;
    private calc.controller.Controller controller;

    public void <init>(calc.model.Model, calc.controller.Controller)
    {
        calc.view.JFrameView r0;
        calc.model.Model r1;
        calc.controller.Controller r2;

        r0 := @this: calc.view.JFrameView;
        r1 := @parameter0: calc.model.Model;
        r2 := @parameter1: calc.controller.Controller;
        specialinvoke r0.<calc.noSwing.MyJFrame: void <init>()>();
        virtualinvoke r0.<calc.view.JFrameView: void setModel(calc.model.Model)>(r1);
        virtualinvoke r0.<calc.view.JFrameView: void setController(calc.controller.Controller)>(r2);
        return;
    }

    public void registerWithModel()
    {
        calc.view.JFrameView r0;
        calc.model.Model $r1;
        calc.model.AbstractModel $r2;

        r0 := @this: calc.view.JFrameView;
        $r1 = r0.<calc.view.JFrameView: calc.model.Model model>;
        $r2 = (calc.model.AbstractModel) $r1;
        virtualinvoke $r2.<calc.model.AbstractModel: void addModelListener(calc.model.ModelListener)>(r0);
        return;
    }

    public calc.controller.Controller getController()
    {
        calc.view.JFrameView r0;
        calc.controller.Controller $r1;

        r0 := @this: calc.view.JFrameView;
        $r1 = r0.<calc.view.JFrameView: calc.controller.Controller controller>;
        return $r1;
    }

    public void setController(calc.controller.Controller)
    {
        calc.view.JFrameView r0;
        calc.controller.Controller r1;

        r0 := @this: calc.view.JFrameView;
        r1 := @parameter0: calc.controller.Controller;
        r0.<calc.view.JFrameView: calc.controller.Controller controller> = r1;
        return;
    }

    public calc.model.Model getModel()
    {
        calc.view.JFrameView r0;
        calc.model.Model $r1;

        r0 := @this: calc.view.JFrameView;
        $r1 = r0.<calc.view.JFrameView: calc.model.Model model>;
        return $r1;
    }

    public void setModel(calc.model.Model)
    {
        calc.view.JFrameView r0;
        calc.model.Model r1;

        r0 := @this: calc.view.JFrameView;
        r1 := @parameter0: calc.model.Model;
        r0.<calc.view.JFrameView: calc.model.Model model> = r1;
        virtualinvoke r0.<calc.view.JFrameView: void registerWithModel()>();
        return;
    }
}
